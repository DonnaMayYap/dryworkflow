% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/copyGitIgnore.R
\name{copyGitIgnore}
\alias{copyGitIgnore}
\title{Copy dryworkflow package file .gitignore to specified destination}
\usage{
copyGitIgnore(destination = NULL, overwriteFile = FALSE,
  createDir = FALSE, renameDotGitignore = TRUE)
}
\arguments{
\item{destination}{string containing directory name for copying
\code{gitignore}. Default: current directory}

\item{overwriteFile}{logical indicating whether to overwrite
existing \code{.gitignore} file: Default: FALSE}

\item{createDir}{whether to create destination directory if it
doesn't exist: Default = FALSE}

\item{renameDotGitignore}{logical, whether to rename
\code{DOTgitignore} to \code{.gitignore}. Default: TRUE}
}
\value{
None
}
\description{
The file \code{.gitignore} contains patterns and file names
indicating which files are not to be tracked by \code{git}. This
is copied to a destination directory or the current directory if
not specified.
}
\details{
The file \code{.gitignore} is supplied with the \code{dryworkflow}
package. The file is called \code{DOTgitignore} and, by default,
renamed automatically to \code{.gitignore} and copied to the
current directory. Various output from \code{R}, intermediate
files from \code{latex} and \code{knitr} are specified as files
which \code{git} does not track. Note that on operating systems
like \code{linux}, files beginning with a dot (.) are hidden and so
to unhide \code{.gitignore} the file name is modified to start
with the letters \code{DOT}. However, to work effectively with
\code{git}, the file must be named \code{.gitignore}.
}
\examples{
copyGitIgnore("testGit", createDir = TRUE, renameDotGitignore = FALSE)
}
\author{
Peter Baker \email{pete@petebaker.id.au}
}

